import axios from "axios";

// ÊâÄÊúâ API Ë´ãÊ±ÇËá™ÂãïÂ∏∂‰∏ä Authorization Token
const axiosapi = axios.create({
    baseURL: import.meta.env.VITE_API_URL // Á¢∫‰øù API Base URL ‰æÜËá™Áí∞Â¢ÉËÆäÊï∏
});

// Ë´ãÊ±ÇÊîîÊà™Âô® (Request Interceptor)
axiosapi.interceptors.request.use(
    (config) => {
        const token = localStorage.getItem("authToken"); // Âæû localStorage ÂèñÂæó Token
        if (token) {
            config.headers.Authorization = `Bearer ${token}`; // Ëá™ÂãïÈôÑÂä† `Authorization` Header
        }
        return config;
    },
    (error) => {
        return Promise.reject(error);
    }
);

// ÂõûÊáâÊîîÊà™Âô® (Response Interceptor)
axiosapi.interceptors.response.use(
    (response) => response,
    (error) => {
        if (error.response && error.response.status === 403) {
            window.location.href = "/403"; // Ëá™ÂãïÂ∞éÂêë 403 È†ÅÈù¢
        }
        console.error("üî¥ API ÈåØË™§:", error.response?.data || error.message);
        return Promise.reject(error.response?.data || error.message);
    }
);

// ÊôÆÈÄö JSON API Ë´ãÊ±Ç
export const jsonRequest = async (method, url, data = {}) => {
    try {
        const response = await axiosapi({
            method,
            url,
            data,
            params: method === "get" ? data : undefined,
        });
        console.log(response);
        return response.data;
    } catch (error) {
        console.error(`üî¥ API Ë™øÁî®Â§±Êïó [${method.toUpperCase()} ${url}]`, error);
        throw error; // ËÆì `store` Êàñ `component` ËôïÁêÜÈåØË™§
    }
};

// Form-Data ‰∏äÂÇ≥ÂúñÁâá
export const uploadFile = (url, formData) => {
    return axiosapi.post(url, formData, {
        headers: { "Content-Type": "multipart/form-data" }, // Á¢∫‰øù Form-Data Ê†ºÂºè
    });
};

export default axiosapi;

